<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="ocaml" proved="true">
<path name=".."/><path name="arith.ml"/>
<theory name="Arith">
 <goal name="Make.eval_b&#39;vc" expl="VC for eval_b">
 <transf name="split_vc" >
  <goal name="eval_b&#39;vc.0" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="82"/></proof>
  </goal>
  <goal name="eval_b&#39;vc.1" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="82"/></proof>
  </goal>
  <goal name="eval_b&#39;vc.2" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="79"/></proof>
  </goal>
  <goal name="eval_b&#39;vc.3" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="89"/></proof>
  </goal>
  <goal name="eval_b&#39;vc.4" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="88"/></proof>
  </goal>
  <goal name="eval_b&#39;vc.5" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="89"/></proof>
  </goal>
  <goal name="eval_b&#39;vc.6" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="89"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Make.eval_0&#39;vc" expl="VC for eval_0">
 <transf name="split_vc" >
  <goal name="eval_0&#39;vc.0" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="93"/></proof>
  </goal>
  <goal name="eval_0&#39;vc.1" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.010000" steps="93"/></proof>
  </goal>
  <goal name="eval_0&#39;vc.2" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="100"/></proof>
  </goal>
  <goal name="eval_0&#39;vc.3" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="100"/></proof>
  </goal>
  <goal name="eval_0&#39;vc.4" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="100"/></proof>
  </goal>
  <goal name="eval_0&#39;vc.5" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="99"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Make.stmt_eval&#39;vc" expl="VC for stmt_eval">
 <proof prover="2"><result status="valid" time="0.110000" steps="27494"/></proof>
 </goal>
 <goal name="Make.stmt_semantics_more_fuel&#39;vc" expl="VC for stmt_semantics_more_fuel">
 <transf name="split_vc" >
  <goal name="stmt_semantics_more_fuel&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.080000" steps="25089"/></proof>
  </goal>
  <goal name="stmt_semantics_more_fuel&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.050000" steps="22540"/></proof>
  </goal>
  <goal name="stmt_semantics_more_fuel&#39;vc.2" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.080000" steps="25165"/></proof>
  </goal>
  <goal name="stmt_semantics_more_fuel&#39;vc.3" expl="precondition">
  <proof prover="2"><result status="valid" time="0.070000" steps="22615"/></proof>
  </goal>
  <goal name="stmt_semantics_more_fuel&#39;vc.4" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.090000" steps="25125"/></proof>
  </goal>
  <goal name="stmt_semantics_more_fuel&#39;vc.5" expl="precondition">
  <proof prover="2"><result status="valid" time="0.050000" steps="22558"/></proof>
  </goal>
  <goal name="stmt_semantics_more_fuel&#39;vc.6" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.080000" steps="25119"/></proof>
  </goal>
  <goal name="stmt_semantics_more_fuel&#39;vc.7" expl="precondition">
  <proof prover="2"><result status="valid" time="0.060000" steps="22562"/></proof>
  </goal>
  <goal name="stmt_semantics_more_fuel&#39;vc.8" expl="postcondition">
  <transf name="split_vc" >
   <goal name="stmt_semantics_more_fuel&#39;vc.8.0" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.020000" steps="53"/></proof>
   </goal>
   <goal name="stmt_semantics_more_fuel&#39;vc.8.1" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.550000" steps="7332"/></proof>
   </goal>
   <goal name="stmt_semantics_more_fuel&#39;vc.8.2" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.020000" steps="72"/></proof>
   </goal>
   <goal name="stmt_semantics_more_fuel&#39;vc.8.3" expl="postcondition">
   <proof prover="3"><result status="valid" time="0.040000" steps="132725"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.stmt_eval_skip">
 <proof prover="3"><result status="valid" time="0.030000" steps="120197"/></proof>
 </goal>
 <goal name="Make.stmt_semantics_skip">
 <proof prover="0"><result status="valid" time="0.220000" steps="2536"/></proof>
 </goal>
 <goal name="Make.stmt_semantics_if">
 <transf name="split_vc" >
  <goal name="stmt_semantics_if.0">
  <transf name="case" arg1="(eval_b st b)">
   <goal name="stmt_semantics_if.0.0" expl="true case">
   <transf name="inline_all" >
    <goal name="stmt_semantics_if.0.0.0" expl="true case">
    <transf name="assert" arg1="(exists c:int, s:t -&gt; int. 0 &lt; c /\ stmt_eval c st stmt1 = RVal s)">
     <goal name="stmt_semantics_if.0.0.0.0" expl="asserted formula">
     <proof prover="2"><result status="valid" time="0.080000" steps="31230"/></proof>
     </goal>
     <goal name="stmt_semantics_if.0.0.0.1" expl="true case">
     <transf name="introduce_exists" >
      <goal name="stmt_semantics_if.0.0.0.1.0" expl="true case">
      <transf name="assert" arg1="(exists c:int, s:t -&gt; int.     0 &lt; c /\ stmt_eval c st (SIf b stmt1 stmt2) = RVal s)">
       <goal name="stmt_semantics_if.0.0.0.1.0.0" expl="asserted formula">
       <transf name="exists" arg1="c">
        <goal name="stmt_semantics_if.0.0.0.1.0.0.0">
        <proof prover="2"><result status="valid" time="0.240000" steps="40273"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="stmt_semantics_if.0.0.0.1.0.1" expl="true case">
       <proof prover="2"><result status="valid" time="0.100000" steps="31408"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="stmt_semantics_if.0.1" expl="false case">
   <transf name="assert" arg1="(exists c:int, s:t -&gt; int. 0 &lt; c /\ stmt_eval c st stmt2 = RVal s)">
    <goal name="stmt_semantics_if.0.1.0" expl="asserted formula">
    <proof prover="2"><result status="valid" time="0.090000" steps="26654"/></proof>
    </goal>
    <goal name="stmt_semantics_if.0.1.1" expl="false case">
    <transf name="introduce_exists" >
     <goal name="stmt_semantics_if.0.1.1.0" expl="false case">
     <transf name="assert" arg1="(exists c:int, s:t -&gt; int.     0 &lt; c /\ stmt_eval c st (SIf b stmt1 stmt2) = RVal s)">
      <goal name="stmt_semantics_if.0.1.1.0.0" expl="asserted formula">
      <transf name="exists" arg1="c">
       <goal name="stmt_semantics_if.0.1.1.0.0.0">
       <proof prover="2"><result status="valid" time="0.100000" steps="31463"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="stmt_semantics_if.0.1.1.0.1" expl="false case">
      <proof prover="2"><result status="valid" time="0.100000" steps="26662"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.stmt_semantics_seq">
 <transf name="split_vc" >
  <goal name="stmt_semantics_seq.0">
  <transf name="inline_all" >
   <goal name="stmt_semantics_seq.0.0">
   <transf name="case" arg1="(exists c:int, s:t -&gt; int. 0 &lt; c /\ stmt_eval c st stmt1 = RVal s)">
    <goal name="stmt_semantics_seq.0.0.0" expl="true case">
    <transf name="case" arg1="(exists c:int, s:t -&gt; int. 0 &lt; c /\ stmt_eval c st stmt2 = RVal s)">
     <goal name="stmt_semantics_seq.0.0.0.0" expl="true case">
     <transf name="introduce_exists" >
      <goal name="stmt_semantics_seq.0.0.0.0.0" expl="true case">
      <transf name="assert" arg1="(exists c2:int, s2:t -&gt; int.  0 &lt; c2 /\ stmt_eval c2 st (SSeq stmt1 stmt2) = RVal s2)">
       <goal name="stmt_semantics_seq.0.0.0.0.0.0" expl="asserted formula">
       <transf name="instantiate" arg1="stmt_eval&#39;def" arg2="(c1 + c)">
        <goal name="stmt_semantics_seq.0.0.0.0.0.0.0" expl="asserted formula">
        <transf name="instantiate" arg1="Hinst" arg2="s">
         <goal name="stmt_semantics_seq.0.0.0.0.0.0.0.0" expl="asserted formula">
         <transf name="instantiate" arg1="Hinst" arg2="(SSeq stmt1 stmt2)">
          <goal name="stmt_semantics_seq.0.0.0.0.0.0.0.0.0" expl="asserted formula">
          <proof prover="2"><result status="valid" time="0.130000" steps="37724"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="stmt_semantics_seq.0.0.0.0.0.1" expl="true case">
       <proof prover="2"><result status="valid" time="0.090000" steps="31932"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="stmt_semantics_seq.0.0.0.1" expl="false case (true case)">
     <proof prover="2"><result status="valid" time="0.080000" steps="31944"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="stmt_semantics_seq.0.0.1" expl="false case">
    <proof prover="2"><result status="valid" time="0.070000" steps="31848"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.opcode_size_nonneg&#39;vc" expl="VC for opcode_size_nonneg">
 <transf name="split_vc" >
  <goal name="opcode_size_nonneg&#39;vc.0" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.030000" steps="78"/></proof>
  </goal>
  <goal name="opcode_size_nonneg&#39;vc.1" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="78"/></proof>
  </goal>
  <goal name="opcode_size_nonneg&#39;vc.2" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="92"/></proof>
  </goal>
  <goal name="opcode_size_nonneg&#39;vc.3" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="91"/></proof>
  </goal>
  <goal name="opcode_size_nonneg&#39;vc.4" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="78"/></proof>
  </goal>
  <goal name="opcode_size_nonneg&#39;vc.5" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="78"/></proof>
  </goal>
  <goal name="opcode_size_nonneg&#39;vc.6" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="78"/></proof>
  </goal>
  <goal name="opcode_size_nonneg&#39;vc.7" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="78"/></proof>
  </goal>
  <goal name="opcode_size_nonneg&#39;vc.8" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="78"/></proof>
  </goal>
  <goal name="opcode_size_nonneg&#39;vc.9" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="78"/></proof>
  </goal>
  <goal name="opcode_size_nonneg&#39;vc.10" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="78"/></proof>
  </goal>
  <goal name="opcode_size_nonneg&#39;vc.11" expl="postcondition">
  <proof prover="2"><result status="valid" time="0.090000" steps="29679"/></proof>
  </goal>
  <goal name="opcode_size_nonneg&#39;vc.12" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="93"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Make.code_size_nonneg&#39;vc" expl="VC for code_size_nonneg">
 <transf name="split_vc" >
  <goal name="code_size_nonneg&#39;vc.0" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.030000" steps="78"/></proof>
  </goal>
  <goal name="code_size_nonneg&#39;vc.1" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="94"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Make.code_size_append&#39;vc" expl="VC for code_size_append">
 <transf name="split_vc" >
  <goal name="code_size_append&#39;vc.0" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="100"/></proof>
  </goal>
  <goal name="code_size_append&#39;vc.1" expl="postcondition">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="151"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Make.star&#39;vc" expl="VC for star">
 <transf name="split_vc" >
  <goal name="star&#39;vc.0" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.030000" steps="94"/></proof>
  </goal>
  <goal name="star&#39;vc.1" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="94"/></proof>
  </goal>
  <goal name="star&#39;vc.2" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="94"/></proof>
  </goal>
  <goal name="star&#39;vc.3" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="98"/></proof>
  </goal>
  <goal name="star&#39;vc.4" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.030000" steps="97"/></proof>
  </goal>
  <goal name="star&#39;vc.5" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="104"/></proof>
  </goal>
  <goal name="star&#39;vc.6" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.030000" steps="104"/></proof>
  </goal>
  <goal name="star&#39;vc.7" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.030000" steps="104"/></proof>
  </goal>
  <goal name="star&#39;vc.8" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.030000" steps="103"/></proof>
  </goal>
  <goal name="star&#39;vc.9" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.030000" steps="104"/></proof>
  </goal>
  <goal name="star&#39;vc.10" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.030000" steps="104"/></proof>
  </goal>
  <goal name="star&#39;vc.11" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.100000" steps="33028"/></proof>
  </goal>
  <goal name="star&#39;vc.12" expl="variant decrease">
  <proof prover="0" timelimit="5"><result status="valid" time="0.030000" steps="207"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Make.star_determ">
 <transf name="split_vc" >
  <goal name="star_determ.0">
  <transf name="destruct_term" arg1="(star s c st)">
   <goal name="star_determ.0.0">
   <proof prover="0"><result status="valid" time="0.030000" steps="89"/></proof>
   </goal>
   <goal name="star_determ.0.1">
   <proof prover="0"><result status="valid" time="0.030000" steps="78"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.star_nil&#39;vc" expl="VC for star_nil">
 <proof prover="0" timelimit="5"><result status="valid" time="0.020000" steps="93"/></proof>
 </goal>
 <goal name="Make.star_nil_bool&#39;vc" expl="VC for star_nil_bool">
 <proof prover="0" timelimit="5"><result status="valid" time="0.030000" steps="94"/></proof>
 </goal>
 <goal name="Make.star_mul&#39;vc" expl="VC for star_mul">
 <proof prover="0" timelimit="5"><result status="valid" time="0.210000" steps="3882"/></proof>
 </goal>
 <goal name="Make.star_append&#39;vc" expl="VC for star_append">
 <transf name="split_vc" >
  <goal name="star_append&#39;vc.0" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.060000" steps="103"/></proof>
  </goal>
  <goal name="star_append&#39;vc.1" expl="precondition">
  <proof prover="2"><result status="valid" time="0.180000" steps="43771"/></proof>
  </goal>
  <goal name="star_append&#39;vc.2" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="85"/></proof>
  </goal>
  <goal name="star_append&#39;vc.3" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.050000" steps="103"/></proof>
  </goal>
  <goal name="star_append&#39;vc.4" expl="precondition">
  <proof prover="1"><result status="valid" time="0.210000" steps="55782"/></proof>
  </goal>
  <goal name="star_append&#39;vc.5" expl="precondition">
  <proof prover="0"><result status="valid" time="0.010000" steps="85"/></proof>
  </goal>
  <goal name="star_append&#39;vc.6" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.040000" steps="103"/></proof>
  </goal>
  <goal name="star_append&#39;vc.7" expl="precondition">
  <proof prover="1"><result status="valid" time="0.260000" steps="55782"/></proof>
  </goal>
  <goal name="star_append&#39;vc.8" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="85"/></proof>
  </goal>
  <goal name="star_append&#39;vc.9" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.050000" steps="106"/></proof>
  </goal>
  <goal name="star_append&#39;vc.10" expl="precondition">
  <proof prover="1"><result status="valid" time="0.270000" steps="53170"/></proof>
  </goal>
  <goal name="star_append&#39;vc.11" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="85"/></proof>
  </goal>
  <goal name="star_append&#39;vc.12" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.060000" steps="105"/></proof>
  </goal>
  <goal name="star_append&#39;vc.13" expl="precondition">
  <proof prover="1"><result status="valid" time="0.160000" steps="53187"/></proof>
  </goal>
  <goal name="star_append&#39;vc.14" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="85"/></proof>
  </goal>
  <goal name="star_append&#39;vc.15" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.060000" steps="115"/></proof>
  </goal>
  <goal name="star_append&#39;vc.16" expl="precondition">
  <proof prover="0"><result status="valid" time="0.080000" steps="618"/></proof>
  </goal>
  <goal name="star_append&#39;vc.17" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="86"/></proof>
  </goal>
  <goal name="star_append&#39;vc.18" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.060000" steps="372"/></proof>
  </goal>
  <goal name="star_append&#39;vc.19" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.050000" steps="236"/></proof>
  </goal>
  <goal name="star_append&#39;vc.20" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.060000" steps="165"/></proof>
  </goal>
  <goal name="star_append&#39;vc.21" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.050000" steps="103"/></proof>
  </goal>
  <goal name="star_append&#39;vc.22" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.050000" steps="115"/></proof>
  </goal>
  <goal name="star_append&#39;vc.23" expl="precondition">
  <proof prover="0"><result status="valid" time="0.160000" steps="618"/></proof>
  </goal>
  <goal name="star_append&#39;vc.24" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="86"/></proof>
  </goal>
  <goal name="star_append&#39;vc.25" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.070000" steps="372"/></proof>
  </goal>
  <goal name="star_append&#39;vc.26" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.050000" steps="236"/></proof>
  </goal>
  <goal name="star_append&#39;vc.27" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.040000" steps="165"/></proof>
  </goal>
  <goal name="star_append&#39;vc.28" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.050000" steps="103"/></proof>
  </goal>
  <goal name="star_append&#39;vc.29" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.060000" steps="115"/></proof>
  </goal>
  <goal name="star_append&#39;vc.30" expl="precondition">
  <proof prover="1"><result status="valid" time="0.270000" steps="59267"/></proof>
  </goal>
  <goal name="star_append&#39;vc.31" expl="precondition">
  <proof prover="0"><result status="valid" time="0.010000" steps="86"/></proof>
  </goal>
  <goal name="star_append&#39;vc.32" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.070000" steps="368"/></proof>
  </goal>
  <goal name="star_append&#39;vc.33" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.040000" steps="236"/></proof>
  </goal>
  <goal name="star_append&#39;vc.34" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.040000" steps="165"/></proof>
  </goal>
  <goal name="star_append&#39;vc.35" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.040000" steps="103"/></proof>
  </goal>
  <goal name="star_append&#39;vc.36" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.060000" steps="112"/></proof>
  </goal>
  <goal name="star_append&#39;vc.37" expl="precondition">
  <proof prover="1"><result status="valid" time="0.270000" steps="59710"/></proof>
  </goal>
  <goal name="star_append&#39;vc.38" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="87"/></proof>
  </goal>
  <goal name="star_append&#39;vc.39" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.080000" steps="393"/></proof>
  </goal>
  <goal name="star_append&#39;vc.40" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.050000" steps="231"/></proof>
  </goal>
  <goal name="star_append&#39;vc.41" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.040000" steps="165"/></proof>
  </goal>
  <goal name="star_append&#39;vc.42" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.040000" steps="103"/></proof>
  </goal>
  <goal name="star_append&#39;vc.43" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.060000" steps="115"/></proof>
  </goal>
  <goal name="star_append&#39;vc.44" expl="precondition">
  <proof prover="1"><result status="valid" time="0.260000" steps="56333"/></proof>
  </goal>
  <goal name="star_append&#39;vc.45" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="87"/></proof>
  </goal>
  <goal name="star_append&#39;vc.46" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.060000" steps="369"/></proof>
  </goal>
  <goal name="star_append&#39;vc.47" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.040000" steps="236"/></proof>
  </goal>
  <goal name="star_append&#39;vc.48" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.050000" steps="165"/></proof>
  </goal>
  <goal name="star_append&#39;vc.49" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.060000" steps="103"/></proof>
  </goal>
  <goal name="star_append&#39;vc.50" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.060000" steps="115"/></proof>
  </goal>
  <goal name="star_append&#39;vc.51" expl="precondition">
  <proof prover="1"><result status="valid" time="0.210000" steps="56324"/></proof>
  </goal>
  <goal name="star_append&#39;vc.52" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="87"/></proof>
  </goal>
  <goal name="star_append&#39;vc.53" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.040000" steps="369"/></proof>
  </goal>
  <goal name="star_append&#39;vc.54" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.070000" steps="236"/></proof>
  </goal>
  <goal name="star_append&#39;vc.55" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.050000" steps="165"/></proof>
  </goal>
  <goal name="star_append&#39;vc.56" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.050000" steps="103"/></proof>
  </goal>
  <goal name="star_append&#39;vc.57" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.190000" steps="46174"/></proof>
  </goal>
  <goal name="star_append&#39;vc.58" expl="precondition">
  <proof prover="1"><result status="valid" time="0.190000" steps="56147"/></proof>
  </goal>
  <goal name="star_append&#39;vc.59" expl="precondition">
  <proof prover="0"><result status="valid" time="0.010000" steps="86"/></proof>
  </goal>
  <goal name="star_append&#39;vc.60" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.040000" steps="181"/></proof>
  </goal>
  <goal name="star_append&#39;vc.61" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.070000" steps="103"/></proof>
  </goal>
  <goal name="star_append&#39;vc.62" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.060000" steps="243"/></proof>
  </goal>
  <goal name="star_append&#39;vc.63" expl="precondition">
  <proof prover="1"><result status="valid" time="0.230000" steps="57815"/></proof>
  </goal>
  <goal name="star_append&#39;vc.64" expl="precondition">
  <proof prover="0"><result status="valid" time="0.010000" steps="86"/></proof>
  </goal>
  <goal name="star_append&#39;vc.65" expl="variant decrease">
  <proof prover="0"><result status="valid" time="0.050000" steps="259"/></proof>
  </goal>
  <goal name="star_append&#39;vc.66" expl="precondition">
  <proof prover="1"><result status="valid" time="0.270000" steps="57848"/></proof>
  </goal>
  <goal name="star_append&#39;vc.67" expl="precondition">
  <proof prover="2"><result status="valid" time="0.140000" steps="41469"/></proof>
  </goal>
  <goal name="star_append&#39;vc.68" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.060000" steps="191"/></proof>
  </goal>
  <goal name="star_append&#39;vc.69" expl="unreachable point">
  <proof prover="0"><result status="valid" time="0.060000" steps="105"/></proof>
  </goal>
  <goal name="star_append&#39;vc.70" expl="postcondition">
  <transf name="split_vc" >
   <goal name="star_append&#39;vc.70.0" expl="postcondition">
   <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="2.720000" steps="21593"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.1" expl="postcondition">
   <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.040000" steps="115"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.2" expl="postcondition">
   <proof prover="1"><result status="valid" time="0.230000" steps="63063"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.3" expl="postcondition">
   <proof prover="1"><result status="valid" time="0.260000" steps="63065"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.4" expl="postcondition">
   <proof prover="1"><result status="valid" time="0.210000" steps="58454"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.5" expl="postcondition">
   <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="0.160000" steps="51590"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.6" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.210000" steps="2610"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.7" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.220000" steps="2610"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.8" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.640000" steps="9237"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.9" expl="postcondition">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="1.390000" steps="203759"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.10" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.270000" steps="1687"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.11" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.250000" steps="1678"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.12" expl="postcondition">
   <proof prover="1"><result status="valid" time="0.240000" steps="64804"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.13" expl="postcondition">
   <proof prover="1"><result status="valid" time="0.290000" steps="63745"/></proof>
   </goal>
   <goal name="star_append&#39;vc.70.14" expl="postcondition">
   <proof prover="0"><result status="valid" time="0.140000" steps="662"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.compile_bool&#39;vc" expl="VC for compile_bool">
 <transf name="split_vc" >
  <goal name="compile_bool&#39;vc.0" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.260000" steps="53289"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.1" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.270000" steps="56487"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.2" expl="precondition">
  <transf name="destruct" arg1="H">
   <goal name="compile_bool&#39;vc.2.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.040000" steps="81"/></proof>
   </goal>
   <goal name="compile_bool&#39;vc.2.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.010000" steps="89"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile_bool&#39;vc.3" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="84"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.4" expl="precondition">
  <transf name="destruct" arg1="H2">
   <goal name="compile_bool&#39;vc.4.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.040000" steps="80"/></proof>
   </goal>
   <goal name="compile_bool&#39;vc.4.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.020000" steps="89"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile_bool&#39;vc.5" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="86"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.6" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.230000" steps="53108"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.7" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.230000" steps="54128"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.8" expl="precondition">
  <transf name="destruct" arg1="H">
   <goal name="compile_bool&#39;vc.8.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.040000" steps="81"/></proof>
   </goal>
   <goal name="compile_bool&#39;vc.8.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.010000" steps="89"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile_bool&#39;vc.9" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="84"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.10" expl="precondition">
  <transf name="destruct" arg1="H2">
   <goal name="compile_bool&#39;vc.10.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.030000" steps="80"/></proof>
   </goal>
   <goal name="compile_bool&#39;vc.10.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.020000" steps="89"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile_bool&#39;vc.11" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="86"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.12" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.220000" steps="53227"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.13" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.250000" steps="54245"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.14" expl="precondition">
  <transf name="destruct" arg1="H">
   <goal name="compile_bool&#39;vc.14.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.040000" steps="81"/></proof>
   </goal>
   <goal name="compile_bool&#39;vc.14.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.020000" steps="89"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile_bool&#39;vc.15" expl="precondition">
  <proof prover="0"><result status="valid" time="0.010000" steps="84"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.16" expl="precondition">
  <transf name="destruct" arg1="H2">
   <goal name="compile_bool&#39;vc.16.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.030000" steps="80"/></proof>
   </goal>
   <goal name="compile_bool&#39;vc.16.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.020000" steps="89"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile_bool&#39;vc.17" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="86"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.18" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.220000" steps="53289"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.19" expl="precondition">
  <transf name="destruct" arg1="H">
   <goal name="compile_bool&#39;vc.19.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.040000" steps="80"/></proof>
   </goal>
   <goal name="compile_bool&#39;vc.19.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.020000" steps="87"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile_bool&#39;vc.20" expl="precondition">
  <proof prover="0"><result status="valid" time="0.010000" steps="84"/></proof>
  </goal>
  <goal name="compile_bool&#39;vc.21" expl="postcondition">
  <transf name="split_vc" >
   <goal name="compile_bool&#39;vc.21.0" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile_bool&#39;vc.21.0.0" expl="postcondition">
    <proof prover="1"><result status="valid" time="0.200000" steps="61168"/></proof>
    </goal>
    <goal name="compile_bool&#39;vc.21.0.1" expl="postcondition">
    <proof prover="1"><result status="valid" time="0.210000" steps="61172"/></proof>
    </goal>
    <goal name="compile_bool&#39;vc.21.0.2" expl="postcondition">
    <proof prover="1"><result status="valid" time="0.600000" steps="114854"/></proof>
    </goal>
    <goal name="compile_bool&#39;vc.21.0.3" expl="postcondition">
    <proof prover="1"><result status="valid" time="0.410000" steps="79584"/></proof>
    </goal>
    <goal name="compile_bool&#39;vc.21.0.4" expl="postcondition">
    <proof prover="1"><result status="valid" time="0.370000" steps="79527"/></proof>
    </goal>
    <goal name="compile_bool&#39;vc.21.0.5" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.100000" steps="240"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="compile_bool&#39;vc.21.1" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile_bool&#39;vc.21.1.0" expl="postcondition">
    <transf name="subst_all" >
     <goal name="compile_bool&#39;vc.21.1.0.0" expl="postcondition">
     <transf name="instantiate" arg1="star&#39;def" arg2="(Nil: list value)">
      <goal name="compile_bool&#39;vc.21.1.0.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(Cons OTrue (Nil: list opcode))">
       <goal name="compile_bool&#39;vc.21.1.0.0.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="st">
        <goal name="compile_bool&#39;vc.21.1.0.0.0.0.0" expl="postcondition">
        <transf name="compile_match" >
         <goal name="compile_bool&#39;vc.21.1.0.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="star&#39;def" arg2="(Cons (VBool True) (Nil: list value))">
          <goal name="compile_bool&#39;vc.21.1.0.0.0.0.0.0.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="(Nil: list opcode),st">
           <goal name="compile_bool&#39;vc.21.1.0.0.0.0.0.0.0.0" expl="postcondition">
           <transf name="compile_match" >
            <goal name="compile_bool&#39;vc.21.1.0.0.0.0.0.0.0.0.0" expl="postcondition">
            <proof prover="0"><result status="valid" time="0.040000" steps="116"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="compile_bool&#39;vc.21.1.1" expl="postcondition">
    <transf name="instantiate" arg1="star&#39;def" arg2="(Nil: list value)">
     <goal name="compile_bool&#39;vc.21.1.1.0" expl="postcondition">
     <transf name="instantiate" arg1="Hinst" arg2="(Cons OFalse (Nil: list opcode))">
      <goal name="compile_bool&#39;vc.21.1.1.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="st">
       <goal name="compile_bool&#39;vc.21.1.1.0.0.0" expl="postcondition">
       <transf name="compile_match" >
        <goal name="compile_bool&#39;vc.21.1.1.0.0.0.0" expl="postcondition">
        <transf name="instantiate" arg1="star&#39;def" arg2="(Cons (VBool False) (Nil: list value))">
         <goal name="compile_bool&#39;vc.21.1.1.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="Hinst" arg2="(Nil: list opcode),st">
          <goal name="compile_bool&#39;vc.21.1.1.0.0.0.0.0.0" expl="postcondition">
          <transf name="compile_match" >
           <goal name="compile_bool&#39;vc.21.1.1.0.0.0.0.0.0.0" expl="postcondition">
           <proof prover="0"><result status="valid" time="0.040000" steps="122"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="compile_bool&#39;vc.21.1.2" expl="postcondition">
    <transf name="split_vc" >
     <goal name="compile_bool&#39;vc.21.1.2.0" expl="postcondition">
     <proof prover="0" timelimit="40"><result status="valid" time="0.480000" steps="6032"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="compile_bool&#39;vc.21.1.3" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.260000" steps="2081"/></proof>
    </goal>
    <goal name="compile_bool&#39;vc.21.1.4" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.180000" steps="2040"/></proof>
    </goal>
    <goal name="compile_bool&#39;vc.21.1.5" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.060000" steps="274"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="compile_bool&#39;vc.21.2" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile_bool&#39;vc.21.2.0" expl="postcondition">
    <transf name="subst_all" >
     <goal name="compile_bool&#39;vc.21.2.0.0" expl="postcondition">
     <transf name="instantiate" arg1="star&#39;def" arg2="(Nil: list value)">
      <goal name="compile_bool&#39;vc.21.2.0.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(Cons OTrue (Nil: list opcode))">
       <goal name="compile_bool&#39;vc.21.2.0.0.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="st">
        <goal name="compile_bool&#39;vc.21.2.0.0.0.0.0" expl="postcondition">
        <transf name="compile_match" >
         <goal name="compile_bool&#39;vc.21.2.0.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="star&#39;def" arg2="(Cons (VBool True) (Nil: list value))">
          <goal name="compile_bool&#39;vc.21.2.0.0.0.0.0.0.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="(Nil: list opcode),st">
           <goal name="compile_bool&#39;vc.21.2.0.0.0.0.0.0.0.0" expl="postcondition">
           <transf name="compile_match" >
            <goal name="compile_bool&#39;vc.21.2.0.0.0.0.0.0.0.0.0" expl="postcondition">
            <proof prover="0"><result status="valid" time="0.030000" steps="116"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="compile_bool&#39;vc.21.2.1" expl="postcondition">
    <transf name="instantiate" arg1="star&#39;def" arg2="(Nil: list value)">
     <goal name="compile_bool&#39;vc.21.2.1.0" expl="postcondition">
     <transf name="instantiate" arg1="Hinst" arg2="(Cons OFalse (Nil: list opcode))">
      <goal name="compile_bool&#39;vc.21.2.1.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="st">
       <goal name="compile_bool&#39;vc.21.2.1.0.0.0" expl="postcondition">
       <transf name="compile_match" >
        <goal name="compile_bool&#39;vc.21.2.1.0.0.0.0" expl="postcondition">
        <transf name="instantiate" arg1="star&#39;def" arg2="(Cons (VBool False) (Nil: list value))">
         <goal name="compile_bool&#39;vc.21.2.1.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="Hinst" arg2="(Nil: list opcode),st">
          <goal name="compile_bool&#39;vc.21.2.1.0.0.0.0.0.0" expl="postcondition">
          <transf name="compile_match" >
           <goal name="compile_bool&#39;vc.21.2.1.0.0.0.0.0.0.0" expl="postcondition">
           <proof prover="0"><result status="valid" time="0.040000" steps="122"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="compile_bool&#39;vc.21.2.2" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.540000" steps="5995"/></proof>
    </goal>
    <goal name="compile_bool&#39;vc.21.2.3" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.240000" steps="2077"/></proof>
    </goal>
    <goal name="compile_bool&#39;vc.21.2.4" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.230000" steps="2040"/></proof>
    </goal>
    <goal name="compile_bool&#39;vc.21.2.5" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.100000" steps="268"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="compile_bool&#39;vc.21.3" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile_bool&#39;vc.21.3.0" expl="postcondition">
    <transf name="subst_all" >
     <goal name="compile_bool&#39;vc.21.3.0.0" expl="postcondition">
     <transf name="instantiate" arg1="star&#39;def" arg2="(Nil: list value)">
      <goal name="compile_bool&#39;vc.21.3.0.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(Cons OTrue (Nil: list opcode))">
       <goal name="compile_bool&#39;vc.21.3.0.0.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="st">
        <goal name="compile_bool&#39;vc.21.3.0.0.0.0.0" expl="postcondition">
        <transf name="compile_match" >
         <goal name="compile_bool&#39;vc.21.3.0.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="star&#39;def" arg2="(Cons (VBool True) (Nil: list value))">
          <goal name="compile_bool&#39;vc.21.3.0.0.0.0.0.0.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="(Nil: list opcode),st">
           <goal name="compile_bool&#39;vc.21.3.0.0.0.0.0.0.0.0" expl="postcondition">
           <transf name="compile_match" >
            <goal name="compile_bool&#39;vc.21.3.0.0.0.0.0.0.0.0.0" expl="postcondition">
            <proof prover="0"><result status="valid" time="0.040000" steps="120"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="compile_bool&#39;vc.21.3.1" expl="postcondition">
    <transf name="instantiate" arg1="star&#39;def" arg2="(Nil: list value)">
     <goal name="compile_bool&#39;vc.21.3.1.0" expl="postcondition">
     <transf name="instantiate" arg1="Hinst" arg2="(Cons OFalse (Nil: list opcode))">
      <goal name="compile_bool&#39;vc.21.3.1.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="st">
       <goal name="compile_bool&#39;vc.21.3.1.0.0.0" expl="postcondition">
       <transf name="compile_match" >
        <goal name="compile_bool&#39;vc.21.3.1.0.0.0.0" expl="postcondition">
        <transf name="instantiate" arg1="star&#39;def" arg2="(Cons (VBool False) (Nil: list value))">
         <goal name="compile_bool&#39;vc.21.3.1.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="Hinst" arg2="(Nil: list opcode),st">
          <goal name="compile_bool&#39;vc.21.3.1.0.0.0.0.0.0" expl="postcondition">
          <transf name="compile_match" >
           <goal name="compile_bool&#39;vc.21.3.1.0.0.0.0.0.0.0" expl="postcondition">
           <proof prover="0"><result status="valid" time="0.050000" steps="126"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="compile_bool&#39;vc.21.3.2" expl="postcondition">
    <transf name="split_vc" >
     <goal name="compile_bool&#39;vc.21.3.2.0" expl="postcondition">
     <proof prover="0"><result status="valid" time="0.550000" steps="6322"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="compile_bool&#39;vc.21.3.3" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.210000" steps="2175"/></proof>
    </goal>
    <goal name="compile_bool&#39;vc.21.3.4" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.180000" steps="2127"/></proof>
    </goal>
    <goal name="compile_bool&#39;vc.21.3.5" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.100000" steps="273"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.compile&#39;vc" expl="VC for compile">
 <transf name="split_vc" >
  <goal name="compile&#39;vc.0" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.240000" steps="53202"/></proof>
  </goal>
  <goal name="compile&#39;vc.1" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.230000" steps="54222"/></proof>
  </goal>
  <goal name="compile&#39;vc.2" expl="precondition">
  <transf name="destruct" arg1="H1">
   <goal name="compile&#39;vc.2.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.040000" steps="80"/></proof>
   </goal>
   <goal name="compile&#39;vc.2.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.010000" steps="88"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile&#39;vc.3" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="84"/></proof>
  </goal>
  <goal name="compile&#39;vc.4" expl="precondition">
  <transf name="destruct" arg1="H1">
   <goal name="compile&#39;vc.4.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.050000" steps="81"/></proof>
   </goal>
   <goal name="compile&#39;vc.4.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.020000" steps="90"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile&#39;vc.5" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="86"/></proof>
  </goal>
  <goal name="compile&#39;vc.6" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.230000" steps="53010"/></proof>
  </goal>
  <goal name="compile&#39;vc.7" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.210000" steps="53535"/></proof>
  </goal>
  <goal name="compile&#39;vc.8" expl="precondition">
  <transf name="destruct" arg1="H1">
   <goal name="compile&#39;vc.8.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.030000" steps="80"/></proof>
   </goal>
   <goal name="compile&#39;vc.8.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.010000" steps="88"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile&#39;vc.9" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="84"/></proof>
  </goal>
  <goal name="compile&#39;vc.10" expl="precondition">
  <transf name="destruct" arg1="H1">
   <goal name="compile&#39;vc.10.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.040000" steps="81"/></proof>
   </goal>
   <goal name="compile&#39;vc.10.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.020000" steps="90"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile&#39;vc.11" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="86"/></proof>
  </goal>
  <goal name="compile&#39;vc.12" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.210000" steps="53227"/></proof>
  </goal>
  <goal name="compile&#39;vc.13" expl="variant decrease">
  <proof prover="1"><result status="valid" time="0.190000" steps="54247"/></proof>
  </goal>
  <goal name="compile&#39;vc.14" expl="precondition">
  <transf name="destruct" arg1="H1">
   <goal name="compile&#39;vc.14.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.040000" steps="80"/></proof>
   </goal>
   <goal name="compile&#39;vc.14.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.020000" steps="88"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile&#39;vc.15" expl="precondition">
  <proof prover="0"><result status="valid" time="0.010000" steps="84"/></proof>
  </goal>
  <goal name="compile&#39;vc.16" expl="precondition">
  <transf name="destruct" arg1="H1">
   <goal name="compile&#39;vc.16.0" expl="precondition">
   <proof prover="0"><result status="valid" time="0.030000" steps="81"/></proof>
   </goal>
   <goal name="compile&#39;vc.16.1" expl="precondition">
   <proof prover="0"><result status="valid" time="0.020000" steps="90"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compile&#39;vc.17" expl="precondition">
  <proof prover="0"><result status="valid" time="0.020000" steps="86"/></proof>
  </goal>
  <goal name="compile&#39;vc.18" expl="precondition">
  <proof prover="0"><result status="valid" time="0.070000" steps="245"/></proof>
  </goal>
  <goal name="compile&#39;vc.19" expl="precondition">
  <proof prover="0"><result status="valid" time="0.080000" steps="265"/></proof>
  </goal>
  <goal name="compile&#39;vc.20" expl="postcondition">
  <transf name="split_vc" >
   <goal name="compile&#39;vc.20.0" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile&#39;vc.20.0.0" expl="postcondition">
    <proof prover="1"><result status="valid" time="0.210000" steps="61127"/></proof>
    </goal>
    <goal name="compile&#39;vc.20.0.1" expl="postcondition">
    <proof prover="1"><result status="valid" time="0.230000" steps="61161"/></proof>
    </goal>
    <goal name="compile&#39;vc.20.0.2" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.930000" steps="124745"/></proof>
    </goal>
    <goal name="compile&#39;vc.20.0.3" expl="postcondition">
    <transf name="split_vc" >
     <goal name="compile&#39;vc.20.0.3.0" expl="postcondition">
     <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="3.340000" steps="392271"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="compile&#39;vc.20.0.4" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.070000" steps="364"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="compile&#39;vc.20.1" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile&#39;vc.20.1.0" expl="postcondition">
    <transf name="subst" arg1="r">
     <goal name="compile&#39;vc.20.1.0.0" expl="postcondition">
     <transf name="instantiate" arg1="star&#39;def" arg2="(Nil: list value)">
      <goal name="compile&#39;vc.20.1.0.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(Cons (OPush x3) (Nil: list opcode))">
       <goal name="compile&#39;vc.20.1.0.0.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="store">
        <goal name="compile&#39;vc.20.1.0.0.0.0.0" expl="postcondition">
        <transf name="compile_match" >
         <goal name="compile&#39;vc.20.1.0.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="star&#39;def" arg2="(Cons (VInt x3) (Nil: list value))">
          <goal name="compile&#39;vc.20.1.0.0.0.0.0.0.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="(Nil: list opcode)">
           <goal name="compile&#39;vc.20.1.0.0.0.0.0.0.0.0" expl="postcondition">
           <transf name="instantiate" arg1="Hinst" arg2="store">
            <goal name="compile&#39;vc.20.1.0.0.0.0.0.0.0.0.0" expl="postcondition">
            <transf name="compile_match" >
             <goal name="compile&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0" expl="postcondition">
             <proof prover="0"><result status="valid" time="0.040000" steps="128"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="compile&#39;vc.20.1.1" expl="postcondition">
    <transf name="subst" arg1="r">
     <goal name="compile&#39;vc.20.1.1.0" expl="postcondition">
     <transf name="instantiate" arg1="star&#39;def" arg2="(Nil: list value)">
      <goal name="compile&#39;vc.20.1.1.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(Cons (OFetch x3) (Nil: list opcode))">
       <goal name="compile&#39;vc.20.1.1.0.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="store">
        <goal name="compile&#39;vc.20.1.1.0.0.0.0" expl="postcondition">
        <transf name="compile_match" >
         <goal name="compile&#39;vc.20.1.1.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="star&#39;def" arg2="(Cons (VInt (store @ x3)) (Nil: list value))">
          <goal name="compile&#39;vc.20.1.1.0.0.0.0.0.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="(Nil: list opcode)">
           <goal name="compile&#39;vc.20.1.1.0.0.0.0.0.0.0" expl="postcondition">
           <transf name="instantiate" arg1="Hinst" arg2="store">
            <goal name="compile&#39;vc.20.1.1.0.0.0.0.0.0.0.0" expl="postcondition">
            <transf name="compile_match" >
             <goal name="compile&#39;vc.20.1.1.0.0.0.0.0.0.0.0.0" expl="postcondition">
             <proof prover="0"><result status="valid" time="0.040000" steps="126"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="compile&#39;vc.20.1.2" expl="postcondition">
    <transf name="split_vc" >
     <goal name="compile&#39;vc.20.1.2.0" expl="postcondition">
     <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="2.100000" steps="29736"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="compile&#39;vc.20.1.3" expl="postcondition">
    <transf name="split_vc" >
     <goal name="compile&#39;vc.20.1.3.0" expl="postcondition">
     <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="2.050000" steps="29731"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="compile&#39;vc.20.1.4" expl="postcondition">
    <proof prover="0" timelimit="20"><result status="valid" time="0.050000" steps="620"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="compile&#39;vc.20.2" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile&#39;vc.20.2.0" expl="postcondition">
    <transf name="subst" arg1="r">
     <goal name="compile&#39;vc.20.2.0.0" expl="postcondition">
     <transf name="instantiate" arg1="star&#39;def" arg2="(Nil: list value)">
      <goal name="compile&#39;vc.20.2.0.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(Cons (OPush x3) (Nil: list opcode))">
       <goal name="compile&#39;vc.20.2.0.0.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="store">
        <goal name="compile&#39;vc.20.2.0.0.0.0.0" expl="postcondition">
        <transf name="compile_match" >
         <goal name="compile&#39;vc.20.2.0.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="star&#39;def" arg2="(Cons (VInt x3) (Nil: list value))">
          <goal name="compile&#39;vc.20.2.0.0.0.0.0.0.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="(Nil: list opcode)">
           <goal name="compile&#39;vc.20.2.0.0.0.0.0.0.0.0" expl="postcondition">
           <transf name="instantiate" arg1="Hinst" arg2="store">
            <goal name="compile&#39;vc.20.2.0.0.0.0.0.0.0.0.0" expl="postcondition">
            <transf name="compile_match" >
             <goal name="compile&#39;vc.20.2.0.0.0.0.0.0.0.0.0.0" expl="postcondition">
             <proof prover="0"><result status="valid" time="0.030000" steps="120"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="compile&#39;vc.20.2.1" expl="postcondition">
    <transf name="subst" arg1="r">
     <goal name="compile&#39;vc.20.2.1.0" expl="postcondition">
     <transf name="instantiate" arg1="star&#39;def" arg2="(Nil: list value)">
      <goal name="compile&#39;vc.20.2.1.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(Cons (OFetch x3) (Nil: list opcode))">
       <goal name="compile&#39;vc.20.2.1.0.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="store">
        <goal name="compile&#39;vc.20.2.1.0.0.0.0" expl="postcondition">
        <transf name="compile_match" >
         <goal name="compile&#39;vc.20.2.1.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="star&#39;def" arg2="(Cons (VInt (store @ x3)) (Nil: list value))">
          <goal name="compile&#39;vc.20.2.1.0.0.0.0.0.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="(Nil: list opcode)">
           <goal name="compile&#39;vc.20.2.1.0.0.0.0.0.0.0" expl="postcondition">
           <transf name="instantiate" arg1="Hinst" arg2="store">
            <goal name="compile&#39;vc.20.2.1.0.0.0.0.0.0.0.0" expl="postcondition">
            <transf name="compile_match" >
             <goal name="compile&#39;vc.20.2.1.0.0.0.0.0.0.0.0.0" expl="postcondition">
             <proof prover="0"><result status="valid" time="0.040000" steps="119"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="compile&#39;vc.20.2.2" expl="postcondition">
    <proof prover="0" timelimit="20"><result status="valid" time="2.070000" steps="29448"/></proof>
    </goal>
    <goal name="compile&#39;vc.20.2.3" expl="postcondition">
    <transf name="split_vc" >
     <goal name="compile&#39;vc.20.2.3.0" expl="postcondition">
     <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="2.130000" steps="29453"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="compile&#39;vc.20.2.4" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.070000" steps="572"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="compile&#39;vc.20.3" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile&#39;vc.20.3.0" expl="postcondition">
    <transf name="subst" arg1="r">
     <goal name="compile&#39;vc.20.3.0.0" expl="postcondition">
     <transf name="instantiate" arg1="star&#39;def" arg2="(Nil: list value)">
      <goal name="compile&#39;vc.20.3.0.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(Cons (OPush x2) (Nil: list opcode))">
       <goal name="compile&#39;vc.20.3.0.0.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="store">
        <goal name="compile&#39;vc.20.3.0.0.0.0.0" expl="postcondition">
        <transf name="compile_match" >
         <goal name="compile&#39;vc.20.3.0.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="star&#39;def" arg2="(Cons (VInt x2) (Nil: list value))">
          <goal name="compile&#39;vc.20.3.0.0.0.0.0.0.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="(Nil: list opcode)">
           <goal name="compile&#39;vc.20.3.0.0.0.0.0.0.0.0" expl="postcondition">
           <transf name="instantiate" arg1="Hinst" arg2="store">
            <goal name="compile&#39;vc.20.3.0.0.0.0.0.0.0.0.0" expl="postcondition">
            <transf name="compile_match" >
             <goal name="compile&#39;vc.20.3.0.0.0.0.0.0.0.0.0.0" expl="postcondition">
             <proof prover="0"><result status="valid" time="0.040000" steps="123"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="compile&#39;vc.20.3.1" expl="postcondition">
    <transf name="subst" arg1="r">
     <goal name="compile&#39;vc.20.3.1.0" expl="postcondition">
     <transf name="instantiate" arg1="star&#39;def" arg2="(Nil: list value)">
      <goal name="compile&#39;vc.20.3.1.0.0" expl="postcondition">
      <transf name="instantiate" arg1="Hinst" arg2="(Cons (OFetch x2) (Nil: list opcode))">
       <goal name="compile&#39;vc.20.3.1.0.0.0" expl="postcondition">
       <transf name="instantiate" arg1="Hinst" arg2="store">
        <goal name="compile&#39;vc.20.3.1.0.0.0.0" expl="postcondition">
        <transf name="compile_match" >
         <goal name="compile&#39;vc.20.3.1.0.0.0.0.0" expl="postcondition">
         <transf name="instantiate" arg1="star&#39;def" arg2="(Cons (VInt (store @ x2)) (Nil: list value))">
          <goal name="compile&#39;vc.20.3.1.0.0.0.0.0.0" expl="postcondition">
          <transf name="instantiate" arg1="Hinst" arg2="(Nil: list opcode)">
           <goal name="compile&#39;vc.20.3.1.0.0.0.0.0.0.0" expl="postcondition">
           <transf name="instantiate" arg1="Hinst" arg2="store">
            <goal name="compile&#39;vc.20.3.1.0.0.0.0.0.0.0.0" expl="postcondition">
            <transf name="compile_match" >
             <goal name="compile&#39;vc.20.3.1.0.0.0.0.0.0.0.0.0" expl="postcondition">
             <proof prover="0"><result status="valid" time="0.030000" steps="123"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="compile&#39;vc.20.3.2" expl="postcondition">
    <proof prover="0" timelimit="20"><result status="valid" time="2.240000" steps="30938"/></proof>
    </goal>
    <goal name="compile&#39;vc.20.3.3" expl="postcondition">
    <transf name="split_vc" >
     <goal name="compile&#39;vc.20.3.3.0" expl="postcondition">
     <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="2.330000" steps="30932"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="compile&#39;vc.20.3.4" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.040000" steps="581"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.compile_stmt&#39;vc" expl="VC for compile_stmt">
 <transf name="split_vc" >
  <goal name="compile_stmt&#39;vc.0" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.150000" steps="46538"/></proof>
  </goal>
  <goal name="compile_stmt&#39;vc.1" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.220000" steps="46996"/></proof>
  </goal>
  <goal name="compile_stmt&#39;vc.2" expl="precondition">
  <proof prover="2"><result status="valid" time="0.210000" steps="52854"/></proof>
  </goal>
  <goal name="compile_stmt&#39;vc.3" expl="precondition">
  <proof prover="2"><result status="valid" time="0.090000" steps="42061"/></proof>
  </goal>
  <goal name="compile_stmt&#39;vc.4" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.150000" steps="46016"/></proof>
  </goal>
  <goal name="compile_stmt&#39;vc.5" expl="variant decrease">
  <proof prover="2"><result status="valid" time="0.270000" steps="46541"/></proof>
  </goal>
  <goal name="compile_stmt&#39;vc.6" expl="precondition">
  <proof prover="2"><result status="valid" time="0.320000" steps="53337"/></proof>
  </goal>
  <goal name="compile_stmt&#39;vc.7" expl="precondition">
  <proof prover="2"><result status="valid" time="0.120000" steps="41730"/></proof>
  </goal>
  <goal name="compile_stmt&#39;vc.8" expl="postcondition">
  <transf name="split_vc" >
   <goal name="compile_stmt&#39;vc.8.0" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile_stmt&#39;vc.8.0.0" expl="postcondition">
    <transf name="split_vc" >
     <goal name="compile_stmt&#39;vc.8.0.0.0" expl="postcondition">
     <proof prover="2"><result status="valid" time="0.310000" steps="53297"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="compile_stmt&#39;vc.8.0.1" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.260000" steps="55792"/></proof>
    </goal>
    <goal name="compile_stmt&#39;vc.8.0.2" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.130000" steps="49167"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="compile_stmt&#39;vc.8.1" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile_stmt&#39;vc.8.1.0" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.260000" steps="1719"/></proof>
    </goal>
    <goal name="compile_stmt&#39;vc.8.1.1" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.280000" steps="59497"/></proof>
    </goal>
    <goal name="compile_stmt&#39;vc.8.1.2" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.170000" steps="45087"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="compile_stmt&#39;vc.8.2" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile_stmt&#39;vc.8.2.0" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.280000" steps="1371"/></proof>
    </goal>
    <goal name="compile_stmt&#39;vc.8.2.1" expl="postcondition">
    <transf name="split_vc" >
     <goal name="compile_stmt&#39;vc.8.2.1.0" expl="postcondition">
     <proof prover="0"><result status="valid" time="0.370000" steps="4040"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="compile_stmt&#39;vc.8.2.2" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.130000" steps="46040"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="compile_stmt&#39;vc.8.3" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile_stmt&#39;vc.8.3.0" expl="postcondition">
    <proof prover="0"><result status="valid" time="0.260000" steps="1371"/></proof>
    </goal>
    <goal name="compile_stmt&#39;vc.8.3.1" expl="postcondition">
    <transf name="split_vc" >
     <goal name="compile_stmt&#39;vc.8.3.1.0" expl="postcondition">
     <proof prover="0"><result status="valid" time="0.470000" steps="4051"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="compile_stmt&#39;vc.8.3.2" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.120000" steps="45977"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="compile_stmt&#39;vc.8.4" expl="postcondition">
   <transf name="split_vc" >
    <goal name="compile_stmt&#39;vc.8.4.0" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.120000" steps="44231"/></proof>
    </goal>
    <goal name="compile_stmt&#39;vc.8.4.1" expl="postcondition">
    <transf name="split_vc" >
     <goal name="compile_stmt&#39;vc.8.4.1.0" expl="postcondition">
     <proof prover="2"><result status="valid" time="0.280000" steps="50223"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="compile_stmt&#39;vc.8.4.2" expl="postcondition">
    <proof prover="2"><result status="valid" time="0.150000" steps="48749"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.5.2" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="ocaml">
<path name=".."/><path name="ocaml_stack.ml"/>
<theory name="Ocaml_stack">
 <goal name="t&#39;vc" expl="VC for t">
 <transf name="split_vc" >
  <goal name="t&#39;vc.0" expl="VC for t">
  <proof prover="0" obsolete="true"><result status="valid" time="0.030000" steps="2"/></proof>
  <proof prover="1"><result status="timeout" time="5.000000" steps="27636"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="create&#39;vc" expl="VC for create" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="create&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="6"/></proof>
  <proof prover="1"><result status="valid" time="0.064679" steps="40"/></proof>
  </goal>
  <goal name="create&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="14"/></proof>
  <proof prover="1"><result status="valid" time="0.053500" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="clear&#39;vc" expl="VC for clear" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="clear&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="11"/></proof>
  <proof prover="1"><result status="valid" time="0.056171" steps="50"/></proof>
  </goal>
  <goal name="clear&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="14"/></proof>
  <proof prover="1"><result status="valid" time="0.040392" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="copy&#39;vc" expl="VC for copy" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="copy&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="9"/></proof>
  <proof prover="1"><result status="valid" time="0.058162" steps="68"/></proof>
  </goal>
  <goal name="copy&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="20"/></proof>
  <proof prover="1"><result status="valid" time="0.035451" steps="30"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="push&#39;vc" expl="VC for push" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="push&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="32"/></proof>
  <proof prover="1"><result status="valid" time="0.060226" steps="91"/></proof>
  </goal>
  <goal name="push&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="14"/></proof>
  <proof prover="1"><result status="valid" time="0.039057" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pop&#39;vc" expl="VC for pop" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pop&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="16"/></proof>
  <proof prover="1"><result status="valid" time="0.062164" steps="96"/></proof>
  </goal>
  <goal name="pop&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.020000" steps="67"/></proof>
  <proof prover="1"><result status="valid" time="0.070642" steps="125"/></proof>
  </goal>
  <goal name="pop&#39;vc.2" expl="exceptional postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="12"/></proof>
  <proof prover="1"><result status="valid" time="0.056976" steps="61"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pop_opt&#39;vc" expl="VC for pop_opt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pop_opt&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="16"/></proof>
  <proof prover="1"><result status="valid" time="0.054288" steps="96"/></proof>
  </goal>
  <goal name="pop_opt&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.020000" steps="67"/></proof>
  <proof prover="1"><result status="valid" time="0.055633" steps="125"/></proof>
  </goal>
  <goal name="pop_opt&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="16"/></proof>
  <proof prover="1"><result status="valid" time="0.046682" steps="75"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="top&#39;vc" expl="VC for top" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="top&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="50"/></proof>
  <proof prover="1"><result status="valid" time="0.058659" steps="101"/></proof>
  </goal>
  <goal name="top&#39;vc.1" expl="exceptional postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="12"/></proof>
  <proof prover="1"><result status="valid" time="0.047746" steps="61"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="top_opt&#39;vc" expl="VC for top_opt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="top_opt&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="21"/></proof>
  <proof prover="1"><result status="valid" time="0.057110" steps="116"/></proof>
  </goal>
  <goal name="top_opt&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="64"/></proof>
  <proof prover="1"><result status="valid" time="0.053636" steps="84"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="is_empty&#39;vc" expl="VC for is_empty" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="is_empty&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="17"/></proof>
  <proof prover="1"><result status="valid" time="0.041244" steps="61"/></proof>
  </goal>
  <goal name="is_empty&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="14"/></proof>
  <proof prover="1"><result status="valid" time="0.051994" steps="75"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="length&#39;vc" expl="VC for length" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="length&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.010000" steps="10"/></proof>
  <proof prover="1"><result status="valid" time="0.057303" steps="54"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>

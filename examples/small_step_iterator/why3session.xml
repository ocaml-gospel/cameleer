<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.5.2" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="ocaml">
<path name=".."/><path name="small_step_iterator.ml"/>
<theory name="Small_step_iterator">
 <goal name="CursorList.t&#39;vc" expl="VC for t">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="1162015"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.000000" steps="269617"/></proof>
 <transf name="split_vc" >
  <goal name="t&#39;vc.0" expl="VC for t">
  <proof prover="0" timelimit="5"><result status="timeout" time="5.000000" steps="2339272"/></proof>
  <proof prover="1"><result status="timeout" time="1.000000" steps="267877"/></proof>
  <proof prover="2"><result status="timeout" time="5.000000" steps="24587"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="CursorList.seq_of_list_append">
 <proof prover="2" obsolete="true"><result status="timeout" time="5.000000" steps="9423"/></proof>
 <transf name="split_vc" >
  <goal name="seq_of_list_append.0">
  <proof prover="0"><result status="timeout" time="1.000000" steps="1218797"/></proof>
  <proof prover="1"><result status="timeout" time="1.000000" steps="156354"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="CursorList.seq_of_list_length">
 <proof prover="2" obsolete="true"><result status="timeout" time="5.000000" steps="29193"/></proof>
 <transf name="split_vc" >
  <goal name="seq_of_list_length.0">
  <proof prover="0"><result status="timeout" time="1.000000" steps="976778"/></proof>
  <proof prover="1"><result status="timeout" time="1.000000" steps="136886"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="CursorList.seq_of_list_mem">
 <proof prover="2" obsolete="true"><result status="timeout" time="5.000000" steps="34868"/></proof>
 <transf name="split_vc" >
  <goal name="seq_of_list_mem.0">
  <proof prover="0"><result status="timeout" time="1.000000" steps="1005174"/></proof>
  <proof prover="1"><result status="timeout" time="1.000000" steps="87630"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.000000" steps="37901"/></proof>
  </goal>
  <goal name="seq_of_list_mem.1">
  <proof prover="0"><result status="timeout" time="1.000000" steps="1090532"/></proof>
  <proof prover="1"><result status="timeout" time="1.000000" steps="100446"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.000000" steps="31222"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="CursorList.next&#39;vc" expl="VC for next">
 <proof prover="2" obsolete="true"><result status="timeout" time="5.000000" steps="49513"/></proof>
 <transf name="split_vc" >
  <goal name="next&#39;vc.0" expl="unreachable point">
  <proof prover="0"><result status="timeout" time="1.000000" steps="1161327"/></proof>
  <proof prover="1"><result status="timeout" time="1.000000" steps="102401"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.067061" steps="75"/></proof>
  </goal>
  <goal name="next&#39;vc.1" expl="type invariant">
  <proof prover="0"><result status="timeout" time="1.000000" steps="943128"/></proof>
  <proof prover="1"><result status="timeout" time="1.000000" steps="76699"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.000000" steps="53793"/></proof>
  </goal>
  <goal name="next&#39;vc.2" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.000000" steps="1494719"/></proof>
  <proof prover="1"><result status="timeout" time="1.000000" steps="75107"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.113398" steps="306"/></proof>
  </goal>
  <goal name="next&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.105583" steps="36180"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.030354" steps="36"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="CursorList.has_next&#39;vc" expl="VC for has_next">
 <proof prover="0"><result status="timeout" time="1.000000" steps="1064791"/></proof>
 <proof prover="1"><result status="timeout" time="1.000000" steps="88769"/></proof>
 </goal>
 <goal name="CursorList.create&#39;vc" expl="VC for create" proved="true">
 <proof prover="1"><result status="valid" time="0.302501" steps="33153"/></proof>
 </goal>
 <goal name="sum_cursor&#39;vc" expl="VC for sum_cursor">
 <transf name="split_vc" >
  <goal name="sum_cursor&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.225765" steps="32598"/></proof>
  </goal>
  <goal name="sum_cursor&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.311985" steps="39908"/></proof>
  </goal>
  <goal name="sum_cursor&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.171257" steps="35513"/></proof>
  </goal>
  <goal name="sum_cursor&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.123732" steps="35676"/></proof>
  </goal>
  <goal name="sum_cursor&#39;vc.4" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.300241" steps="40992"/></proof>
  </goal>
  <goal name="sum_cursor&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.183480" steps="35736"/></proof>
  </goal>
  <goal name="sum_cursor&#39;vc.6" expl="loop invariant preservation">
  <transf name="split_vc" >
   <goal name="sum_cursor&#39;vc.6.0" expl="loop invariant preservation">
   <proof prover="0"><result status="timeout" time="1.000000" steps="1004444"/></proof>
   <proof prover="1"><result status="timeout" time="1.000000" steps="100066"/></proof>
   <proof prover="2"><result status="timeout" time="5.000000" steps="17055"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_cursor&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.066160" steps="95079"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Mem.mem_cursor&#39;vc" expl="VC for mem_cursor" proved="true">
 <proof prover="1"><result status="valid" time="1.298448" steps="98937"/></proof>
 </goal>
</theory>
<theory name="Refinement__CursorList" proved="true">
 <goal name="Cursor.permitted_empty" proved="true">
 <proof prover="1"><result status="valid" time="0.268630" steps="33023"/></proof>
 </goal>
 <goal name="Cursor.next&#39;refn&#39;vc" expl="VC for next&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.213812" steps="31412"/></proof>
 </goal>
 <goal name="Cursor.has_next&#39;refn&#39;vc" expl="VC for has_next&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.163780" steps="28950"/></proof>
 </goal>
</theory>
</file>
</why3session>
